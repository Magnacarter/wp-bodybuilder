{"version":3,"sources":["admin-script.js"],"names":[],"mappingsfile":"admin-app.js","sourcesContent":["jQuery( document ).ready( function($) {\n\n\t// Counter for day-repeater click function\n\tvar i = 1;\n\n\t// Set all variables to be used in scope\n\tvar frame,\n\t\tmetaBox = $('#exercise-custom-fields.postbox'), // Your meta box id here\n\t\taddImgLink = metaBox.find('.upload-custom-img'),\n\t\tdelImgLink = metaBox.find( '.delete-custom-img'),\n\t\timgContainer = metaBox.find( '.custom-img-container'),\n\t\timgIdInput = metaBox.find( '.custom-img-id' );\n\n\t// ADD IMAGE LINK\n\taddImgLink.on( 'click', function( event ){\n\n\t\tevent.preventDefault();\n\n\t\t// If the media frame already exists, reopen it.\n\t\tif ( frame ) {\n\t\t\tframe.open();\n\t\t\treturn;\n\t\t}\n\n\t\t// Create a new media frame\n\t\tframe = wp.media({\n\t\t\ttitle: 'Select or Upload Media for Exercise',\n\t\t\tbutton: {\n\t\t\t\ttext: 'Use this media'\n\t\t\t},\n\t\t\tmultiple: true  // Set to true to allow multiple files to be selected\n\t\t});\n\n\t\t// When an image is selected in the media frame...\n\t\tframe.on( 'select', function() {\n\n\t\t\t// Get media attachment details from the frame state\n\t\t\tvar attachment = frame.state().get('selection').first().toJSON();\n\n\t\t\t// Send the attachment URL to our custom image input field.\n\t\t\timgContainer.append( '<img src=\"'+attachment.url+'\" alt=\"\" style=\"max-width:150px;\"/>' );\n\n\t\t\t// Send the attachment id to our hidden input\n\t\t\timgIdInput.val( attachment.id );\n\n\t\t\t// Hide the add image link\n\t\t\taddImgLink.addClass( 'hidden' );\n\n\t\t\t// Unhide the remove image link\n\t\t\tdelImgLink.removeClass( 'hidden' );\n\t\t});\n\n\t\t// Finally, open the modal on click\n\t\tframe.open();\n\t});\n\n\n\t// DELETE IMAGE LINK\n\tdelImgLink.on( 'click', function( event ){\n\n\t\tevent.preventDefault();\n\n\t\t// Clear out the preview image\n\t\timgContainer.html( '' );\n\n\t\t// Un-hide the add image link\n\t\taddImgLink.removeClass( 'hidden' );\n\n\t\t// Hide the delete image link\n\t\tdelImgLink.addClass( 'hidden' );\n\n\t\t// Delete the image id from the hidden input\n\t\timgIdInput.val( '' );\n\n\t});\n\n\t/**\n\t * Day repeater\n\t *\n\t * click function that adds a repeated day\n\t */\n\t$( '.day-repeat-add' ).click( function() {\n\n\t\ti++;\n\n\t\tfield = $( this ).closest( 'td' ).find( '.day_repeat li#day-list-item:last' ).clone( true );\n\n\t\tfield.find( '#exercise-list li' ).remove();\n\n\t\tfieldLocation = $( this ).closest( 'td' ).find( '.day_repeat li#day-list-item:last' );\n\n\t\t$( '.day-header', field ).find( 'h4' ).html( 'Day ' + i, function( index, name ) {\n\n\t\t\treturn name.replace( /(\\d+)/, function( fullMatch, n ) {\n\n\t\t\t\treturn Number(n) + 1;\n\n\t\t\t});\n\n\t\t});\n\n\t\tfield.insertAfter( fieldLocation, $( this ).closest( 'td' ) );\n\n\t\treturn false;\n\n\t});\n\n\t/**\n\t * Select an exercise for workout\n\t */\n\tvar exerciseSelect = $( 'select.wpbb-exercise-selection' );\n\n\texerciseSelect.change( function() {\n\n\t\tvar selectedValue = $( this ).val();\n\t\tvar list          = $( this ).parent();\n\n\t\t$( this ).prop('selectedIndex',0);\n\n\t\t//saveExercises.show();\n\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'json',\n\t\t\turl: ajaxurl,\n\t\t\tdata: {\n\t\t\t\taction: 'workout_process_ajax',\n\t\t\t\texerciseId: selectedValue\n\t\t\t},\n\t\t\tsuccess: function( response ) {\n\n\t\t\t\tif ( response.success === true ) {\n\n\t\t\t\t\tconsole.log( response.data.post_title );\n\n\t\t\t\t\tvar json = response.data;\n\n\t\t\t\t\tif( json.post_title !== '' ) {\n\t\t\t\t\t\tlist.find( '#exercise-list' ).append( '<li class=\"list\" data-class-id=\"'+ json.ID +'\"><strong>Exercise: </strong>' + json.post_title + '<span><a href=\"\" class=\"remove-exercise\">  Remove</a></span></li>' );\n\t\t\t\t\t}\n\n\t\t\t\t\t$( \".remove-exercise\" ).on( 'click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tconsole.log( 'clicked' );\n\t\t\t\t\t\tvar exerciseListItem = $( this ).parent().parent();\n\t\t\t\t\t\texerciseListItem.remove();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif ( response.success === false ) {\n\t\t\t\t\tconsole.log( 'not working' );\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function( xhr, status, error ) {\n\t\t\t\tvar err = eval( \"(\" + xhr.responseText + \")\" );\n\t\t\t\tconsole.log( err.Message );\n\t\t\t}\n\t\t});\n\n\t});\n\n\t/**\n\t * Remove a repeated day\n\t */\n\t$( '.day-repeat-remove' ).click( function(){\n\n\t\t$( this ).parent().parent().remove();\n\n\t\treturn false;\n\n\t});\n\n\t/**\n\t * Repeater field\n\t *\n\t * click function that adds a repeated field\n\t */\n\t$( '.repeatable-add' ).click( function() {\n\n\t\tfield = $( this ).closest( 'td' ).find( '.custom_repeatable li:last' ).clone( true );\n\n\t\tfieldLocation = $( this ).closest( 'td' ).find( '.custom_repeatable li:last' );\n\n\t\t$( 'input', field ).val('').attr( 'name', function( index, name ) {\n\n\t\t\treturn name.replace( /(\\d+)/, function( fullMatch, n ) {\n\n\t\t\t\treturn Number(n) + 1;\n\n\t\t\t});\n\n\t\t});\n\n\t\tfield.insertAfter( fieldLocation, $( this ).closest( 'td' ) );\n\n\t\treturn false;\n\n\t});\n\n\t/**\n\t * Remove a repeated field\n\t */\n\t$( '.repeatable-remove' ).click( function(){\n\n\t\t$( this ).parent().remove();\n\n\t\treturn false;\n\n\t});\n\n\t/**\n\t * Sort repeated fields and save new order to db\n\t * with a php callback function\n\t */\n\t$( '.custom_repeatable' ).sortable({\n\t\topacity: 0.6,\n\t\trevert: true,\n\t\tcursor: 'move',\n\t\thandle: '.sort',\n\t\tupdate: function (event, ui) {\n\n\t\t\tvar list = $( this ).sortable( \"toArray\", {attribute: 'id'} );\n\t\t\tvar data = [];\n\n\t\t\tfor( var i = 0; list.length > i; i++ ) {\n\n\t\t\t\tvar item    = list[i];\n\t\t\t\tvar itemVal = $( \"#\" + item ).find( 'input' ).val();\n\n\t\t\t\tdata.push( itemVal );\n\n\t\t\t}\n\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\tdatatype: 'json',\n\t\t\t\turl: ajaxurl,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'process_ajax',\n\t\t\t\t\tdata: data,\n\t\t\t\t\tpostId: $( '#exercise_repeatable-repeatable' ).attr('data-post-id')\n\t\t\t\t},\n\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\tif ( response.success === true ) {\n\n\t\t\t\t\t\tconsole.log('working');\n\t\t\t\t\t\tconsole.log( response.data );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( response.success === false ) {\n\n\t\t\t\t\t\tconsole.log( response );\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n});"]}